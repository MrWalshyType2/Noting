// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Noting.Data;

namespace Noting.Migrations
{
    [DbContext(typeof(MvcNoteContext))]
    partial class MvcNoteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Noting.Models.Keyword", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoteId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("NoteId");

                    b.ToTable("Keyword");
                });

            modelBuilder.Entity("Noting.Models.Note", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("AutomaticIdLinking")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoteId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SpacedRepetitionHistoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Subtopic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Topic")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NoteId");

                    b.HasIndex("SpacedRepetitionHistoryId");

                    b.ToTable("Note");
                });

            modelBuilder.Entity("Noting.Models.SpacedRepetitionHistory", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("SpacedRepetitionHistory");
                });

            modelBuilder.Entity("Noting.Models.Keyword", b =>
                {
                    b.HasOne("Noting.Models.Note", null)
                        .WithMany("Keywords")
                        .HasForeignKey("NoteId");
                });

            modelBuilder.Entity("Noting.Models.Note", b =>
                {
                    b.HasOne("Noting.Models.Note", null)
                        .WithMany("LinkedNoteIds")
                        .HasForeignKey("NoteId");

                    b.HasOne("Noting.Models.SpacedRepetitionHistory", "SpacedRepetitionHistory")
                        .WithMany()
                        .HasForeignKey("SpacedRepetitionHistoryId");

                    b.Navigation("SpacedRepetitionHistory");
                });

            modelBuilder.Entity("Noting.Models.Note", b =>
                {
                    b.Navigation("Keywords");

                    b.Navigation("LinkedNoteIds");
                });
#pragma warning restore 612, 618
        }
    }
}
